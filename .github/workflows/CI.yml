name: CI
on:
  push:
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  format:
    name: Julia Style Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - name: Install JuliaFormatter and format
        run: |
          julia  -e 'using Pkg; Pkg.add("JuliaFormatter")'
          julia  -e 'using JuliaFormatter; while !format(".", BlueStyle()) end'
      - name: Format check
        run: |
          julia -e '
          out = Cmd(`git diff --name-only`) |> read |> String
          if out == ""
              exit(0)
          else
              @error "The following files are not formatted:\n $out"
              exit(1)
          end'
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'
          - '1.8'
          - '~1.9.0-0'
        os:
          - ubuntu-latest
          - windows-latest
        arch:
          - x64
        include:
          - os: windows-latest
            version: '1.7'
            arch: x64
          - os: windows-latest
            version: '1.8'
            arch: x64
          - os: windows-latest
            version: '1'
            arch: x64
          - os: macOS-latest
            version: '1'
            arch: x64
          - os: macOS-latest
            version: '1.7'
            arch: x64
          - os: macOS-latest
            version: '1.8'
            arch: x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
        with:
          cache-compiled: "true"
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  benchmark:
    name: Run julia benchmark
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: runner.os−test−env.cache−name−{{ hashFiles('**/Project.toml') }}
          restore-keys: |
            runner.os−test−
            ${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Run benchmark
        run: |
          ls
          cd ../test/benchmarks
          julia --project --color=yes -e '
            using Pkg;
            Pkg.instantiate();
            include("BenchmarkUnbatchedFit.jl")'

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1.17.0
        with:
          name: Julia benchmark result
          tool: 'julia'
          output-file-path: test/benchmarks/output.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t/github-action-not-triggering-gh-pages-upon-push/16096
          github-token: ${{ secrets.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 }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '125%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@Andrei32Ionescu'